{"cs_emp_dashboard":"268","cs_js_dashboard":"180","cs_language_file":"","cs_vat_switch":"off","cs_payment_vat":"","cs_job_feat_price":"55","cs_job_feat_txt":"Have your Ad appear at the top of the category listings","cs_job_pay_txt":"","cs_job_welcome_title":"","cs_job_welcome_con":"","cs_currency_type":"USD","currency_sign":"$","cs_paypal_gateway_logo":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/images\/paypal.png","cs_paypal_gateway_status":"on","cs_paypal_sandbox":"on","paypal_email":"ali_optimist73@yahoo.com","dir_paypal_ipn_url":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/listner.php","cs_authorizedotnet_gateway_logo":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/images\/athorizedotnet_.png","cs_authorizedotnet_gateway_status":"on","cs_authorizenet_sandbox":"on","authorizenet_login":"2L4qd9gPdJ","authorizenet_transaction_key":"44q5uz92R6gQeF6r","dir_authorizenet_ipn_url":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/listner.php","cs_pre_bank_transfer_logo":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/images\/bank.png","cs_pre_bank_transfer_status":"on","cs_bank_information":"Bank Of America","cs_bank_account_id":"001-2121315168198145","cs_other_information":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. ","cs_skrill_gateway_logo":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/images\/skrill.png","cs_skrill_gateway_status":"on","skrill_email":"Aamirshahzad2009@live.com","cs_skrill_ipn_url":"http:\/\/jobhunt.chimpgroup.com\/wp-content\/plugins\/wp-jobhunt\/payments\/listner.php","dynamic_directory_package":"1","package_id_array":["1435834184","1435834807","1435834604","1436872400","1436872427","1437724444","1437724467","1437724486","1438429922"],"package_title_array":["Basic","Standard","Premium","Platinum","Sinle Submission","Weekly Mebership","Basic Mebership","Monthly Mebership","Test"],"package_price_array":["10","45","95","250","10","9.99","49.99","79.99","23.5"],"package_type_array":["subscription","subscription","subscription","subscription","single","single","subscription","subscription","subscription"],"package_listings_array":["10","6","5","250","1","1","10","30","3"],"package_cvs_array":["","","8","","","","","",""],"package_duration_array":["20","7","8","20","30","10","10","10","25"],"package_duration_period_array":["days","days","days","days","days","days","days","days","days"],"package_submission_limit_array":["20","9","10","20","30","10","20","25","20"],"cs_list_dur_array":["days","days","days","days","days","days","days","days","days"],"package_feature_array":["no","no","no","no","no","no","yes","no","no"],"package_description_array":["Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum. Suspendisse aliquet libero nec arcu.","Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum. Suspendisse aliquet libero nec arcu.","Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum. Suspendisse aliquet libero nec arcu.","Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.","Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.","Feel for what it‘s like on The Ladders with new jobs for free","Feel for what it‘s like on The Ladders with new jobs for free","Feel for what it‘s like on The Ladders with new jobs for free","Sad asd dsader erfd  gd ercvbdfg fcvcfx gre gdv fgerx cvxcf sad asd dsader erfd  gd ercvbdfg fcvcfx gre gdv fgerx cvxcf sad asd dsader erfd  gd ercvbdfg fcvcfx gre gdv fgerx cvxc."],"package_title":"Title","package_price":"","package_type":"single","package_listings":"","package_cvs":"","package_duration":"","package_duration_period":"days","package_submission_limit":"","cs_list_dur":"days","package_feature":"no","package_description":"","dynamic_directory_cv_pkg":"1","cv_pkg_id_array":["1436171631","1436171721","1436857060","1436856956"],"cv_pkg_title_array":["Power pack","1000 Pack","Super Pack","Unlimited Pack"],"cv_pkg_price_array":["30","179.00","199.00","99.99"],"cv_pkg_cvs_array":["30","30","5000","400"],"cv_pkg_dur_array":["30","40","20","20"],"cv_pkg_dur_period_array":["days","days","days","days"],"cv_pkg_desc_array":["Aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","Suspendisse aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","Aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","Aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum."],"cv_pkg_title":"Title","cv_pkg_price":"","cv_pkg_cvs":"","cv_pkg_dur":"","cv_pkg_dur_period":"days","cv_pkg_desc":"","cs_extras_switch":"off","dynamic_booking_extra_feature":"1","cs_extra_feature_title":"Title","cs_extra_feature_price":"","cs_extra_feature_type":"none","cs_extra_feature_guests":"none","cs_extra_feature_fchange":"","cs_extra_feature_desc":"","cs_features_switch":"off","dynamic_booking_feats":"1","cs_feats_title":"Title","cs_feats_image":"","cs_feats_desc":"","cs_reviews_per_page":"10","cs_reviews_front":"off","cs_review_status":"publish","cs_review_booking_id":"off","dynamic_booking_dyn_reviews":"1","cs_dyn_reviews_title":"Title","cs_cus_field_title":["dropdown","dropdown","dropdown","dropdown"],"cs_cus_field_id":["1436178484","1436180919","1436179659","1436180286"],"cs_cus_field_dropdown":{"required":["yes","yes","yes","yes"],"label":["Job Type","Salary","Career Level","Experience"],"meta_key":["Jobtype","salarypackage","careerlevel","experiencetotal"],"help":["Please Select job Type","","Please Select Career Level","Please Select Job Experience"],"enable_srch":["yes","yes","yes","yes"],"multi":["yes","no","no","no"],"post_multi":["no","no","no","no"],"first_value":["- select -","- select -","- select -","- select -"]},"cus_field_dropdown":{"selected":{"1436178484":["1"],"1436180919":["5"],"1436179659":["1"],"1436180286":["1"]},"options":{"1436178484":["Full time","Part time"],"1436180919":["0- £15,000","£15,000 - £20,000 ","£20,000 - £30,000  ","£30,000 - £50,000","£50,000+"],"1436179659":["Manager","Officer","Student","Executive","Entry Level","Others"],"1436180286":["Fresh","Less than 1 Year","1 Year","2 Years","3 Years","4 Years","5 Years","6 Years","7 Years","8 Years +"]},"options_values":{"1436178484":["full-time","part-time"],"1436180919":["0- 15000","15000-20000","20000-30000 ","30000-50000 ","50000-plus"],"1436179659":["Manager","Officer","Student","Executive","Entry Level","Others"],"1436180286":["Fresh","Year-less","1-Year","2-Years","3-Years","4-Years","5-Years","6-Years","7-Years","8-Years"]}},"cs_job_seeker_cus_field_title":["range","dropdown","dropdown"],"cs_job_seeker_cus_field_id":["1436950807","1437557872","1437557873"],"cs_job_seeker_cus_field_range":{"required":["no"],"label":["Salary"],"meta_key":["salarytype"],"placeholder":[""],"help":[""],"min":["10000"],"max":["50000"],"increment":["1000"],"enable_srch":["yes"],"enable_inputs":["yes"],"srch_style":["slider"],"default_value":[""]},"cs_job_seeker_cus_field_dropdown":{"required":["no","no"],"label":["Job Type","Industry"],"meta_key":["job-type","industry"],"help":["",""],"enable_srch":["yes","yes"],"multi":["yes","yes"],"post_multi":["no","no"],"first_value":["- select -","- select -"]},"job_seeker_cus_field_dropdown":{"options":{"1437557872":["Full Time","Part Time"],"1437557873":["Development","Managment","Finance"]},"options_values":{"1437557872":["full-time","part-time"],"1437557873":["development","management","finance"]},"selected":{"1437557872":["2"],"1437557873":["3"]}},"cs_employer_cus_field_title":["dropdown","range","dropdown"],"cs_employer_cus_field_id":["1437565308","1437565309","1437565310"],"cs_employer_cus_field_dropdown":{"required":["yes","yes"],"label":["Membership Type","Business Type"],"meta_key":["membership-type","type"],"help":["select type of employer type",""],"enable_srch":["yes","no"],"multi":["yes","no"],"post_multi":["no","no"],"first_value":["- select -","- select -"]},"employer_cus_field_dropdown":{"options":{"1437565308":["Permanent","Basic"],"1437565310":["Wordpress","E-commerce"]},"options_values":{"1437565308":["permanent","basic"],"1437565310":["wordpress","ecommerce"]},"selected":{"1437565308":["2"],"1437565310":["2"]}},"cs_employer_cus_field_range":{"required":["no"],"label":["salary"],"meta_key":["salary"],"placeholder":[""],"help":[""],"min":["8000"],"max":["80000"],"increment":["5000"],"enable_srch":["yes"],"enable_inputs":["yes"],"srch_style":["slider"],"default_value":[""]},"cs_twitter_api_switch":"on","cs_consumer_key":"ghnkXI0p6BtyBMM8puLJZa73L","cs_consumer_secret":"GG3P6j6phnWnecPOFWhCw2uh2jn2iKyfEUbbLkL7RA6zksism6","cs_access_token":"1584785251-dHVvpb9f2JDqvgbXoh2aFiyL8D0pShEqnKkkILh","cs_access_token_secret":"rl3n6l7YHQbbL6hGpi7S4exlj67b2C0VBBMkraXc4V0S2","cs_facebook_login_switch":"on","cs_facebook_app_id":"1456640251303212","cs_facebook_secret":"9c4e9f6f687bbb723f953a17592a13a8","cs_linkedin_login_switch":"on","cs_linkedin_app_id":"773pd6t3hzhdqc","cs_linkedin_secret":"KrktJVj88HJMmXNF","cs_google_login_switch":"on","cs_google_client_id":"965431802636-1upsbgtdpbtkomnd7sjukq1vvjeeu2na.apps.googleusercontent.com","cs_google_client_secret":"oWolznvJwXg3Pj8Ldjj0CCfj","cs_google_api_key":"AIzaSyAL13CvkVuT560TjWrU7vsXixd27M2hcpk","cs_google_login_redirect_url":"http:\/\/jobhunt.chimpgroup.com\/wp-login.php?loginGoogle=1","cs_captcha_switch":"on","cs_sitekey":"6LfIHwkTAAAAAIV6v5kFzRw7SAp6bTA1CED4AuQC","cs_secretkey":"6LfIHwkTAAAAANXeA-Hxj5xnw7ixhPkFnKRcdNUp","cs_staysafe_switch":"on","cs_seeker_switch":"on","dynamic_stay_text":"1","stay_id_array":["1437835746","1437835777"],"cs_stay_title_array":["Stay Safe 1","stay safe 2"],"cs_stay_desc_array":["Far much that one rank beheld bluebird after outside ignobly allegedly more when oh arrogantly vehement irresistibly fussy penguin insect additionally wow absolutely crud meretriciously hastily dalmatian a glowered inset one","Far much that one rank beheld bluebird after outside ignobly allegedly more when oh arrogantly vehement irresistibly fussy penguin insect additionally wow absolutely crud meretriciously hastily dalmatian a glowered inset one"],"cs_stay_title":"Title","cs_stay_desc":"","cs_profile_switch":"on","cs_award_switch":"on","cs_portfolio_switch":"on","cs_skills_switch":"on","cs_education_switch":"on","cs_experience_switch":"on","cs_document_switch":"on","cs_job_loc_sugg":"website","cs_search_by_location":"countries_and_cities","cs_search_by_location_city":"","cs_booking_search_location":"yes","cs_search_result_page":"12","cs_default_location_country":"united_states_of_america","cs_default_location_state":"alaska","cs_default_location_city":"london","cs_default_location_address":"","cs_facebook_share":"on","cs_twitter_share":"on","cs_google_plus_share":"on","cs_pintrest_share":"on","cs_tumblr_share":"off","cs_dribbble_share":"off","cs_instagram_share":"off","cs_stumbleupon_share":"off","cs_youtube_share":"on","cs_share_share":"on","cs_export_plugin_options":"","cs_import_plugin_options":"","action":"plugin_option_save","cs_extra_features_options":[],"cs_packages_options":{"1435834184":{"package_id":"1435834184","package_title":"Basic","package_price":"10","package_duration":"20","package_duration_period":"days","package_description":"Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum. Suspendisse aliquet libero nec arcu.","package_type":"subscription","package_listings":"10","package_cvs":"","package_submission_limit":"20","cs_list_dur":"days","package_feature":"no"},"1439283289":{"package_id":"1439283289","package_title":"Single Submit","package_price":"5","package_duration":"20","package_duration_period":"days","package_description":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. ","package_type":"single","package_listings":1,"package_cvs":"","package_submission_limit":"20","cs_list_dur":"days","package_feature":"no"},"1435834807":{"package_id":"1435834807","package_title":"Standard","package_price":"45","package_duration":"7","package_duration_period":"days","package_description":"Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum. Suspendisse aliquet libero nec arcu.","package_type":"subscription","package_listings":"6","package_cvs":"","package_submission_limit":"9","cs_list_dur":"days","package_feature":"no"},"1435834604":{"package_id":"1435834604","package_title":"Premium","package_price":"95","package_duration":"8","package_duration_period":"days","package_description":"Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum. Suspendisse aliquet libero nec arcu.","package_type":"subscription","package_listings":"5","package_cvs":"8","package_submission_limit":"10","cs_list_dur":"days","package_feature":"no"},"1436872400":{"package_id":"1436872400","package_title":"Platinum","package_price":"250","package_duration":"20","package_duration_period":"days","package_description":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.","package_type":"subscription","package_listings":"250","package_cvs":"","package_submission_limit":"20","cs_list_dur":"days","package_feature":"no"},"1436872427":{"package_id":"1436872427","package_title":"Sinle Submission","package_price":"10","package_duration":"30","package_duration_period":"days","package_description":"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.","package_type":"single","package_listings":1,"package_cvs":"","package_submission_limit":"30","cs_list_dur":"days","package_feature":"no"},"1437724444":{"package_id":"1437724444","package_title":"Weekly Mebership","package_price":"9.99","package_duration":"10","package_duration_period":"days","package_description":"Feel for what it‘s like on The Ladders with new jobs for free","package_type":"single","package_listings":1,"package_cvs":"","package_submission_limit":"10","cs_list_dur":"days","package_feature":"no"},"1437724467":{"package_id":"1437724467","package_title":"Basic Mebership","package_price":"49.99","package_duration":"10","package_duration_period":"days","package_description":"Feel for what it‘s like on The Ladders with new jobs for free","package_type":"subscription","package_listings":"10","package_cvs":"","package_submission_limit":"20","cs_list_dur":"days","package_feature":"yes"},"1437724486":{"package_id":"1437724486","package_title":"Monthly Mebership","package_price":"79.99","package_duration":"10","package_duration_period":"days","package_description":"Feel for what it‘s like on The Ladders with new jobs for free","package_type":"subscription","package_listings":"30","package_cvs":"","package_submission_limit":"25","cs_list_dur":"days","package_feature":"no"},"1438429922":{"package_id":"1438429922","package_title":"Test","package_price":"23.5","package_duration":"25","package_duration_period":"days","package_description":"Sad asd dsader erfd  gd ercvbdfg fcvcfx gre gdv fgerx cvxcf sad asd dsader erfd  gd ercvbdfg fcvcfx gre gdv fgerx cvxcf sad asd dsader erfd  gd ercvbdfg fcvcfx gre gdv fgerx cvxc.","package_type":"subscription","package_listings":"3","package_cvs":"","package_submission_limit":"20","cs_list_dur":"days","package_feature":"no"}},"cs_cv_pkgs_options":{"1436171631":{"cv_pkg_id":"1436171631","cv_pkg_title":"Power pack","cv_pkg_price":"30","cv_pkg_dur":"30","cv_pkg_dur_period":"days","cv_pkg_desc":"Aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","cv_pkg_cvs":"30"},"1436171721":{"cv_pkg_id":"1436171721","cv_pkg_title":"1000 Pack","cv_pkg_price":"179.00","cv_pkg_dur":"40","cv_pkg_dur_period":"days","cv_pkg_desc":"Suspendisse aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","cv_pkg_cvs":"30"},"1436857060":{"cv_pkg_id":"1436857060","cv_pkg_title":"Super Pack","cv_pkg_price":"199.00","cv_pkg_dur":"20","cv_pkg_dur_period":"days","cv_pkg_desc":"Aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","cv_pkg_cvs":"5000"},"1436856956":{"cv_pkg_id":"1436856956","cv_pkg_title":"Unlimited Pack","cv_pkg_price":"99.99","cv_pkg_dur":"20","cv_pkg_dur_period":"days","cv_pkg_desc":"Aliquet libero nec arcu sagittis auctor. Aliquam quis metus metus. Aliquam volutpat molestie pretium. Nullam ut aliquet felis. Vestibulum.","cv_pkg_cvs":"400"}},"cs_feats_options":[],"cs_staytext_options":{"1437835746":{"stay_id":"1437835746","cs_stay_title":"Stay Safe 1","cs_stay_desc":"Far much that one rank beheld bluebird after outside ignobly allegedly more when oh arrogantly vehement irresistibly fussy penguin insect additionally wow absolutely crud meretriciously hastily dalmatian a glowered inset one"},"1437835777":{"stay_id":"1437835777","cs_stay_title":"stay safe 2","cs_stay_desc":"Far much that one rank beheld bluebird after outside ignobly allegedly more when oh arrogantly vehement irresistibly fussy penguin insect additionally wow absolutely crud meretriciously hastily dalmatian a glowered inset one"}},"cs_dyn_reviews_options":[]}